pipeline{
    
    agent any 
    
    stages {
        
        stage('Git Checkout'){
            
            steps{
                
                script{
                    
                    git branch: 'main', url: 'https://github.com/vaibhav9191/demo-counter.git'
                }
            }
        }
        stage('UNIT testing'){
            
            steps{
                
                script{
                    
                    sh 'mvn test'
                }
            }
        }
        stage('Integration testing'){
            
            steps{
                
                script{
                    
                    sh 'mvn verify -DskipUnitTests'
                }
            }
        }
        stage('Maven build'){
            
            steps{
                
                script{
                    
                    sh 'mvn clean install'
                }
            }
        }
        stage('Static code analysis'){
            
            steps{
                
                script{
                    
                    withSonarQubeEnv(credentialsId: 'sonarkey') {
                        
                        sh 'mvn clean package sonar:sonar'
                    }
                   
                }
                    
                
            }
            
        }
        stage('Quality GET Status'){
            
            steps{
                script{

                    waitForQualityGate abortPipeline: false, credentialsId: 'sonarkey'

                }
                
            }
            
        }
        stage('upload War file to nexus'){
            
            steps{
                script{

                  //  def readPomVersion = readMavenPom file: 'pom.xml'
                  //  def nexusRepo = readPomVersion.version.endsWith("SNAPSHOT") ? "demoapp-snapshot" : "demoapp-release"

                       //waitForQualityGate abortPipeline: false, credentialsId: 'Sssonar'
                   // nexusArtifactUploader artifacts:
                    // [
                     //   [
                     //       artifactId: 'springboot',
                      //       classifier: '', 
                      //       file: 'target/Uber.jar', 
                       //      type: 'jar'
                    //    ]
                    //],
                    // credentialsId: 'nexus_Auth', 
                    // groupId: 'com.example', 
                    // nexusUrl: '44.212.91.82:8081/', 
                    // nexusVersion: 'nexus3', 
                     //protocol: 'http', 
                     //repository: nexusRepo,
                        //version: '1.0.0' 
                     //version: "${readPomVersion.version}"

                }
                
            }
            
        }
        stage("Docker Image Build"){
            
            steps{

                script{

                    //sh 'sudo docker image build -t $JOB_NAME:v1.BUILD_ID .'
                    //sh 'sudo docker image tag $JOB_NAME:v1.BUILD_ID vaibhavpatill/$JOB_NAME:v1.BUILD_ID'
                    //sh 'sudo docker image tag $JOB_NAME:latest'
                }
            }

        }

            
    }
        
}