pipeline{
    
    agent any 
    enviroment{
        def versionFile = 'version.txt'
        
    }
    
    stages {
        
        stage('Git Checkout'){
            
            steps{
                
                script{
                    
                    git branch: 'main', url: 'https://github.com/vaibhav9191/demo-counter.git'
                }
            }
        }
        stage('UNIT testing'){
            
            steps{
                
                script{
                    
                    sh 'mvn test'
                }
            }
        }
        stage('Integration testing'){
            
            steps{
                
                script{
                    
                    sh 'mvn verify -DskipUnitTests'
                }
            }
        }
        stage('Maven build'){
            
            steps{
                
                script{
                    
                    sh 'mvn clean install'
                }
            }
        }
        stage('Static code analysis'){
            
            steps{
                
                script{
                    
                    withSonarQubeEnv(credentialsId: 'nwwsonar') {
                        
                        sh 'mvn clean package sonar:sonar'
                    }
                   
                }
                    
                
            }
            
        }
        stage('Quality GET Status'){
            
            steps{

                script{

                    waitForQualityGate abortPipeline: false, credentialsId: 'nwwsonar'

                }
                
            }
            
        }
        stage('Upload jar file to nexus'){

            steps{

                script{
                    
                    def versionFile = 'version.txt'
                    sh "echo Chnaging VERSION......"
                    def version = sh(script: "awk -F '[.]' '{print \$1\".\"\$2\".\"\$3\".\"\$4+1}' ${versionFile}", returnStdout: true).trim()
                    sh "echo ${version} > ${versionFile}"
                    sh "mvn -DskipTests=true -Dmaven.javadoc.skip=true -B clean package -DskipTests -Dproject.version=${version}"
                    sh "cp target/Uber.jar target/Uber-${version}.jar"

                    def readPomVersion = readMavenPom file: 'pom.xml'
                     def nexusRepo = readPomVersion.version.endsWith("SNAPSHOT") ? "demoapp-snapshot" : "demoapp-release"

                    nexusArtifactUploader artifacts: 
                    [
                        [
                            artifactId: 'springboot', 
                            classifier: '', 
                            file: 'target/Uber-${version}.jar', 
                            type: 'jar'
                        ]
                    ], 
                    credentialsId: 'nexus_Auth', 
                    groupId: 'com.example', 
                    nexusUrl: '44.212.91.82:8081', 
                    nexusVersion: 'nexus3', 
                    protocol: 'http', 
                    repository: nexusRepo, 
                    version: "${version}"
                    //version: "${readPomVersion.version}"
                }
            }
        }
        stage('Docker Image BUild '){

            steps{

                script{

                    sh 'docker image build -t $JOB_NAME:v1.$BUILD_ID .'
                    sh 'docker image tag $JOB_NAME:v1.$BUILD_ID vaibhavpatill/$JOB_NAME:v1.$BUILD_ID'
                    sh 'docker image tag $JOB_NAME:v1.$BUILD_ID vaibhavpatill/$JOB_NAME:latest'



                }
            }
        }
        stage('Push image to Docker hub'){

            steps{

                script{
                    withCredentials([string(credentialsId: 'docker_hub_cred', variable: 'docker_hub_cred')]) {

                        sh 'docker login -u vaibhavpatill -p ${docker_hub_cred}'
                        sh 'docker image push vaibhavpatill/$JOB_NAME:v1.$BUILD_ID'
                        sh 'docker image push vaibhavpatill/$JOB_NAME:latest'


                    
                    }
                }
            }

        }



        

            
    }
        
}